<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="happyman.sugang.repository.AdminMapper">
    <select id="findAdminById" resultType="AdminEntity">
        select *
        from admin
        where admin_id = #{name}
    </select>

    <insert id="createAdmin" useGeneratedKeys="true" keyProperty="adminIdx">
        insert into admin (admin_id, admin_pwd)
                values (#{adminId}, #{adminPwd})
    </insert>

    <select id="findAdmins" resultType="AdminEntity">
        select *
        from admin
    </select>

    <select id="findAdminByIdx" resultType="AdminEntity">
        select *
        from admin
        where admin_idx = #{idx}
    </select>

    <delete id="deleteAdmin">
        delete from admin where admin_idx = #{idx}
    </delete>

    <select id="getRoomOccupancy" resultType="Integer">
        select room_occupancy
        from room
        where room_idx = #{idx}
    </select>

    <insert id="createClass" useGeneratedKeys="true" keyProperty="classIdx">
        insert into class (course_idx, lecturer_idx, room_idx, class_no, class_register, class_max, class_opened, class_begin, class_end)
                values (#{courseIdx}, #{lecturerIdx}, #{roomIdx}, #{classNo}, #{classRegister}, #{classMax}, #{classOpened}, #{classBegin}, #{classEnd})
    </insert>

    <delete id="deleteClass">
        delete
        from class
        where class_idx = #{idx}
    </delete>

    
    <select id="findClassesByNameAndCourseId" resultType="ClassEntity">
        select cl.class_idx, cl.class_no, co.course_idx, co.course_name, co.course_id, co.course_credit, co.course_year, cl.class_register, cl.class_max, cl.class_opened, cl.class_begin, cl.class_end, l.lecturer_name, r.room_building_name, r.room_name
        from course co
        join class cl on co.course_idx = cl.course_idx
        join lecturer l on cl.lecturer_idx = l.lecturer_idx
        join room r on cl.room_idx = r.room_idx
        <where>
            <if test="name != null and name !=''">
                and co.course_name like concat('%',#{name},'%')
            </if>
            <if test="courseId != null and courseId !=''">
                and co.course_id like concat('%',#{courseId},'%')
            </if>
        </where>
    </select>

    <insert id="createStudent" useGeneratedKeys="true" keyProperty="studentIdx">
        insert into student (major_idx, lecturer_idx, student_id, student_pwd, student_name, student_year, student_sex, student_status)
                values (#{majorIdx}, #{lecturerIdx}, #{studentId}, #{studentPwd}, #{studentName}, #{studentYear}, #{studentSex}, #{studentStatus})
    </insert>

    <select id="findStudentsByName" resultType="StudentEntity">
        select *
        from student
        where student_name = #{name}
    </select>

    <update id="updateStudentStatus">
        update student
        set student_status = #{status}
        where student_idx = #{idx}
    </update>

    <select id="findStudentLecturer" resultType="LecturerEntity">
        select m.major_name, l.lecturer_name
        from student s
        join lecturer l on s.lecturer_idx = l.lecturer_idx
        join major m on l.major_idx = m.major_idx
        where s.student_idx = #{idx}
    </select>

    <select id="findStudentRegistrations" resultType="ClassEntity">
        select co.course_id, co.course_name, co.course_credit, co.course_year, cl.class_idx, cl.class_no, cl.class_register, cl.class_max, cl.class_opened, cl.class_begin, cl.class_end, r.room_idx, r.room_building_name, r.room_name, l.lecturer_idx, l.lecturer_name
        from course co
        join class cl on co.course_idx = cl.course_idx
        join lecturer l on cl.lecturer_idx = l.lecturer_idx
        join room r on cl.room_idx = r.room_idx
        join registration rg on cl.class_idx = rg.class_idx
        join student s on rg.student_idx = s.student_idx
        where S.student_idx = #{idx}
    </select>
</mapper>
